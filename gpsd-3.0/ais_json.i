/*
 * This is code generated by jsongen.py. Do not hand-hack it!
 */
 
/*@ -fullinitblock */


    const struct json_attr_t json_ais1[] = {
	AIS_HEADER
	{"status",        t_uinteger,  .addr.uinteger = &ais->type1.status,
                                       .dflt.uinteger = 0},
	{"turn",          t_integer,   .addr.integer = &ais->type1.turn,
                                       .dflt.integer = AIS_TURN_NOT_AVAILABLE},
	{"speed",         t_uinteger,  .addr.uinteger = &ais->type1.speed,
                                       .dflt.uinteger = AIS_SPEED_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type1.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type1.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type1.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"course",        t_uinteger,  .addr.uinteger = &ais->type1.course,
                                       .dflt.uinteger = AIS_COURSE_NOT_AVAILABLE},
	{"heading",       t_uinteger,  .addr.uinteger = &ais->type1.heading,
                                       .dflt.uinteger = AIS_HEADING_NOT_AVAILABLE},
	{"second",        t_uinteger,  .addr.uinteger = &ais->type1.second,
                                       .dflt.uinteger = AIS_SEC_NOT_AVAILABLE},
	{"maneuver",      t_uinteger,  .addr.uinteger = &ais->type1.maneuver,
                                       .dflt.uinteger = AIS_SEC_INOPERATIVE},
	{"raim",          t_boolean,   .addr.boolean = &ais->type1.raim,
                                       .dflt.boolean = false},
	{"radio",         t_uinteger,  .addr.uinteger = &ais->type1.radio,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    char timestamp[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais4[] = {
	AIS_HEADER
	{"timestamp",     t_string,    .addr.string = timestamp,
                                       .len = sizeof(timestamp)},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type4.accuracy,
                                       .dflt.boolean = true},
	{"lon",           t_integer,   .addr.integer = &ais->type4.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type4.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"epfd",          t_uinteger,  .addr.uinteger = &ais->type4.epfd,
                                       .dflt.uinteger = 0},
	{"raim",          t_boolean,   .addr.boolean = &ais->type4.raim,
                                       .dflt.boolean = false},
	{"radio",         t_uinteger,  .addr.uinteger = &ais->type4.radio,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    char eta[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais5[] = {
	AIS_HEADER
	{"imo",           t_uinteger,  .addr.uinteger = &ais->type5.imo,
                                       .dflt.uinteger = 0},
	{"ais_version",   t_uinteger,  .addr.uinteger = &ais->type5.ais_version,
                                       .dflt.uinteger = 0},
	{"callsign",      t_string,    .addr.string = ais->type5.callsign,
                                       .len = sizeof(ais->type5.callsign)},
	{"shipname",      t_string,    .addr.string = ais->type5.shipname,
                                       .len = sizeof(ais->type5.shipname)},
	{"shiptype",      t_uinteger,  .addr.uinteger = &ais->type5.shiptype,
                                       .dflt.uinteger = 0},
	{"to_bow",        t_uinteger,  .addr.uinteger = &ais->type5.to_bow,
                                       .dflt.uinteger = 0},
	{"to_stern",      t_uinteger,  .addr.uinteger = &ais->type5.to_stern,
                                       .dflt.uinteger = 0},
	{"to_port",       t_uinteger,  .addr.uinteger = &ais->type5.to_port,
                                       .dflt.uinteger = 0},
	{"to_starboard",  t_uinteger,  .addr.uinteger = &ais->type5.to_starboard,
                                       .dflt.uinteger = 0},
	{"epfd",          t_uinteger,  .addr.uinteger = &ais->type5.epfd,
                                       .dflt.uinteger = 0},
	{"eta",           t_string,    .addr.string = eta,
                                       .len = sizeof(eta)},
	{"draught",       t_uinteger,  .addr.uinteger = &ais->type5.draught,
                                       .dflt.uinteger = 0},
	{"destination",   t_string,    .addr.string = ais->type5.destination,
                                       .len = sizeof(ais->type5.destination)},
	{"dte",           t_uinteger,  .addr.uinteger = &ais->type5.dte,
                                       .dflt.uinteger = 1},
	{NULL}
    };

    char data[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais6[] = {
	AIS_HEADER
	AIS_TYPE6
	{"data",          t_string,    .addr.string = data,
                                       .len = sizeof(data)},
	{NULL}
    };

    char departure[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais6_fid12[] = {
	AIS_HEADER
	AIS_TYPE6
	{"lastport",      t_string,    .addr.string = ais->type6.dac1fid12.lastport,
                                       .len = sizeof(ais->type6.dac1fid12.lastport)},
	{"departure",     t_string,    .addr.string = departure,
                                       .len = sizeof(departure)},
	{"nextport",      t_string,    .addr.string = ais->type6.dac1fid12.nextport,
                                       .len = sizeof(ais->type6.dac1fid12.nextport)},
	{"eta",           t_string,    .addr.string = eta,
                                       .len = sizeof(eta)},
	{"dangerous",     t_string,    .addr.string = ais->type6.dac1fid12.dangerous,
                                       .len = sizeof(ais->type6.dac1fid12.dangerous)},
	{"imdcat",        t_string,    .addr.string = ais->type6.dac1fid12.imdcat,
                                       .len = sizeof(ais->type6.dac1fid12.imdcat)},
	{"unid",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid12.unid,
                                       .dflt.uinteger = 0},
	{"amount",        t_uinteger,  .addr.uinteger = &ais->type6.dac1fid12.amount,
                                       .dflt.uinteger = 0},
	{"unit",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid12.unit,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais6_fid15[] = {
	AIS_HEADER
	AIS_TYPE6
	{"airdraught",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid15.airdraught,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais6_fid16[] = {
	AIS_HEADER
	AIS_TYPE6
	{"persons",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid16.persons,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais6_fid25_cargos_subtype[] = {
	{"code",          t_uinteger,STRUCTOBJECT(struct cargo_t, code),
                                       .dflt.uinteger = 0},
	{"subtype",       t_uinteger,STRUCTOBJECT(struct cargo_t, subtype),
                                       .dflt.uinteger = 0},
    };
/*@-type@*//* STRUCTARRAY confuses splint */
    const struct json_attr_t json_ais6_fid25[] = {
	AIS_HEADER
	AIS_TYPE6
	{"unit",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid25.unit,
                                       .dflt.uinteger = 0},
	{"amount",        t_uinteger,  .addr.uinteger = &ais->type6.dac1fid25.amount,
                                       .dflt.uinteger = 0},
	{"cargos",        t_array,     STRUCTARRAY(ais->type6.dac1fid25.cargos, json_ais6_fid25_cargos_subtype, &ais->type6.dac1fid25.ncargos)},
	{NULL}
    };
/*@+type@*/

    char arrival[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais6_fid18[] = {
	AIS_HEADER
	AIS_TYPE6
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid18.linkage,
                                       .dflt.uinteger = 0},
	{"arrival",       t_string,    .addr.string = arrival,
                                       .len = sizeof(arrival)},
	{"portname",      t_string,    .addr.string = ais->type6.dac1fid18.portname,
                                       .len = sizeof(ais->type6.dac1fid18.portname)},
	{"destination",   t_string,    .addr.string = ais->type6.dac1fid18.destination,
                                       .len = sizeof(ais->type6.dac1fid18.destination)},
	{"lon",           t_integer,   .addr.integer = &ais->type6.dac1fid18.lon,
                                       .dflt.integer = AIS_LON3_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type6.dac1fid18.lat,
                                       .dflt.integer = AIS_LAT3_NOT_AVAILABLE},
	{NULL}
    };

    char berth_name[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais6_fid20[] = {
	AIS_HEADER
	AIS_TYPE6
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.linkage,
                                       .dflt.uinteger = 0},
	{"berth_length",  t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.berth_length,
                                       .dflt.uinteger = 0},
	{"berth_depth",   t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.berth_depth,
                                       .dflt.uinteger = 0},
	{"position",      t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.position,
                                       .dflt.uinteger = 0},
	{"arrival",       t_string,    .addr.string = arrival,
                                       .len = sizeof(arrival)},
	{"availability",  t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.availability,
                                       .dflt.uinteger = 0},
	{"agent",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.agent,
                                       .dflt.uinteger = 0},
	{"fuel",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.fuel,
                                       .dflt.uinteger = 0},
	{"chandler",      t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.chandler,
                                       .dflt.uinteger = 0},
	{"stevedore",     t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.stevedore,
                                       .dflt.uinteger = 0},
	{"electrical",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.electrical,
                                       .dflt.uinteger = 0},
	{"water",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.water,
                                       .dflt.uinteger = 0},
	{"customs",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.customs,
                                       .dflt.uinteger = 0},
	{"cartage",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.cartage,
                                       .dflt.uinteger = 0},
	{"crane",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.crane,
                                       .dflt.uinteger = 0},
	{"lift",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.lift,
                                       .dflt.uinteger = 0},
	{"medical",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.medical,
                                       .dflt.uinteger = 0},
	{"navrepair",     t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.navrepair,
                                       .dflt.uinteger = 0},
	{"provisions",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.provisions,
                                       .dflt.uinteger = 0},
	{"shiprepair",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.shiprepair,
                                       .dflt.uinteger = 0},
	{"surveyor",      t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.surveyor,
                                       .dflt.uinteger = 0},
	{"steam",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.steam,
                                       .dflt.uinteger = 0},
	{"tugs",          t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.tugs,
                                       .dflt.uinteger = 0},
	{"solidwaste",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.solidwaste,
                                       .dflt.uinteger = 0},
	{"liquidwaste",   t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.liquidwaste,
                                       .dflt.uinteger = 0},
	{"hazardouswaste",t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.hazardouswaste,
                                       .dflt.uinteger = 0},
	{"ballast",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.ballast,
                                       .dflt.uinteger = 0},
	{"additional",    t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.additional,
                                       .dflt.uinteger = 0},
	{"regional1",     t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.regional1,
                                       .dflt.uinteger = 0},
	{"regional2",     t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.regional2,
                                       .dflt.uinteger = 0},
	{"future1",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.future1,
                                       .dflt.uinteger = 0},
	{"future2",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid20.future2,
                                       .dflt.uinteger = 0},
	{"berth_name",    t_string,    .addr.string = berth_name,
                                       .len = sizeof(berth_name)},
	{"berth_lon",     t_integer,   .addr.integer = &ais->type6.dac1fid20.berth_lon,
                                       .dflt.integer = AIS_LON3_NOT_AVAILABLE},
	{"berth_lat",     t_integer,   .addr.integer = &ais->type6.dac1fid20.berth_lat,
                                       .dflt.integer = AIS_LAT3_NOT_AVAILABLE},
	{NULL}
    };

    char start[JSON_VAL_MAX+1];
    const struct json_attr_t json_ais6_fid28_waypoints_subtype[] = {
	{"lon",           t_integer, STRUCTOBJECT(struct waypoint_t, lon),
                                       .dflt.integer = AIS_LON4_NOT_AVAILABLE},
	{"lat",           t_integer, STRUCTOBJECT(struct waypoint_t, lat),
                                       .dflt.integer = AIS_LAT4_NOT_AVAILABLE},
    };
/*@-type@*//* STRUCTARRAY confuses splint */
    const struct json_attr_t json_ais6_fid28[] = {
	AIS_HEADER
	AIS_TYPE6
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid28.linkage,
                                       .dflt.uinteger = 0},
	{"sender",        t_uinteger,  .addr.uinteger = &ais->type6.dac1fid28.sender,
                                       .dflt.uinteger = 0},
	{"rtype",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid28.rtype,
                                       .dflt.uinteger = 0},
	{"start",         t_string,    .addr.string = start,
                                       .len = sizeof(start)},
	{"duration",      t_uinteger,  .addr.uinteger = &ais->type6.dac1fid28.duration,
                                       .dflt.uinteger = 0},
	{"waypoints",     t_array,     STRUCTARRAY(ais->type6.dac1fid28.waypoints, json_ais6_fid28_waypoints_subtype, &ais->type6.dac1fid28.waycount)},
	{NULL}
    };
/*@+type@*/

    const struct json_attr_t json_ais6_fid30[] = {
	AIS_HEADER
	AIS_TYPE6
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type6.dac1fid30.linkage,
                                       .dflt.uinteger = 0},
	{"text",          t_string,    .addr.string = ais->type6.dac1fid30.text,
                                       .len = sizeof(ais->type6.dac1fid30.text)},
	{NULL}
    };

    const struct json_attr_t json_ais6_fid32_tidals_subtype[] = {
	{"lon",           t_integer, STRUCTOBJECT(struct tidal_t, lon),
                                       .dflt.integer = AIS_LON3_NOT_AVAILABLE},
	{"lat",           t_integer, STRUCTOBJECT(struct tidal_t, lat),
                                       .dflt.integer = AIS_LAT3_NOT_AVAILABLE},
	{"from_hour",     t_uinteger,STRUCTOBJECT(struct tidal_t, from_hour),
                                       .dflt.uinteger = AIS_MONTH_NOT_AVAILABLE},
	{"from_min",      t_uinteger,STRUCTOBJECT(struct tidal_t, from_min),
                                       .dflt.uinteger = AIS_MINUTE_NOT_AVAILABLE},
	{"to_hour",       t_uinteger,STRUCTOBJECT(struct tidal_t, to_hour),
                                       .dflt.uinteger = AIS_HOUR_NOT_AVAILABLE},
	{"to_min",        t_uinteger,STRUCTOBJECT(struct tidal_t, to_min),
                                       .dflt.uinteger = AIS_MINUTE_NOT_AVAILABLE},
	{"cdir",          t_uinteger,STRUCTOBJECT(struct tidal_t, cdir),
                                       .dflt.uinteger = DAC1FID32_CDIR_NOT_AVAILABLE},
	{"cspeed",        t_uinteger,STRUCTOBJECT(struct tidal_t, cspeed),
                                       .dflt.uinteger = DAC1FID32_CSPEED_NOT_AVAILABLE},
    };
/*@-type@*//* STRUCTARRAY confuses splint */
    const struct json_attr_t json_ais6_fid32[] = {
	AIS_HEADER
	AIS_TYPE6
	{"month",         t_uinteger,  .addr.uinteger = &ais->type6.dac1fid32.month,
                                       .dflt.uinteger = AIS_MONTH_NOT_AVAILABLE},
	{"day",           t_uinteger,  .addr.uinteger = &ais->type6.dac1fid32.day,
                                       .dflt.uinteger = AIS_DAY_NOT_AVAILABLE},
	{"tidals",        t_array,     STRUCTARRAY(ais->type6.dac1fid32.tidals, json_ais6_fid32_tidals_subtype, &ais->type6.dac1fid32.ntidals)},
	{NULL}
    };
/*@+type@*/

    const struct json_attr_t json_ais7[] = {
	AIS_HEADER
	{"mmsi1",         t_uinteger,  .addr.uinteger = &ais->type7.mmsi1,
                                       .dflt.uinteger = 0},
	{"mmsi2",         t_uinteger,  .addr.uinteger = &ais->type7.mmsi2,
                                       .dflt.uinteger = 0},
	{"mmsi3",         t_uinteger,  .addr.uinteger = &ais->type7.mmsi3,
                                       .dflt.uinteger = 0},
	{"mmsi4",         t_uinteger,  .addr.uinteger = &ais->type7.mmsi4,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais8[] = {
	AIS_HEADER
	AIS_TYPE8
	{"data",          t_string,    .addr.string = data,
                                       .len = sizeof(data)},
	{NULL}
    };

    const struct json_attr_t json_ais8_fid13[] = {
	AIS_HEADER
	AIS_TYPE8
	{"reason",        t_string,    .addr.string = ais->type8.dac1fid13.reason,
                                       .len = sizeof(ais->type8.dac1fid13.reason)},
	{"closefrom",     t_string,    .addr.string = ais->type8.dac1fid13.closefrom,
                                       .len = sizeof(ais->type8.dac1fid13.closefrom)},
	{"closeto",       t_string,    .addr.string = ais->type8.dac1fid13.closeto,
                                       .len = sizeof(ais->type8.dac1fid13.closeto)},
	{"radius",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.radius,
                                       .dflt.uinteger = AIS_DAC1FID13_RADIUS_NOT_AVAILABLE},
	{"extunit",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.extunit,
                                       .dflt.uinteger = AIS_DAC1FID13_EXTUNIT_NOT_AVAILABLE},
	{"fday",          t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.fday,
                                       .dflt.uinteger = AIS_DAY_NOT_AVAILABLE},
	{"fmonth",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.fmonth,
                                       .dflt.uinteger = AIS_MONTH_NOT_AVAILABLE},
	{"fhour",         t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.fhour,
                                       .dflt.uinteger = AIS_HOUR_NOT_AVAILABLE},
	{"fminute",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.fminute,
                                       .dflt.uinteger = AIS_MINUTE_NOT_AVAILABLE},
	{"tday",          t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.tday,
                                       .dflt.uinteger = AIS_DAY_NOT_AVAILABLE},
	{"tmonth",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.tmonth,
                                       .dflt.uinteger = AIS_MONTH_NOT_AVAILABLE},
	{"thour",         t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.thour,
                                       .dflt.uinteger = AIS_HOUR_NOT_AVAILABLE},
	{"tminute",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid13.tminute,
                                       .dflt.uinteger = AIS_MINUTE_NOT_AVAILABLE},
	{NULL}
    };

    const struct json_attr_t json_ais8_fid15[] = {
	AIS_HEADER
	AIS_TYPE8
	{"airdraught",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid15.airdraught,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais8_fid17_targets_subtype[] = {
	{"idtype",        t_uinteger,STRUCTOBJECT(struct target_t, idtype),
                                       .dflt.uinteger = DAC1FID17_IDTYPE_OTHER},
	{"id.mmsi",       t_uinteger,STRUCTOBJECT(struct target_t, id.mmsi),
                                       .dflt.uinteger = 0},
	{"id.imo",        t_uinteger,STRUCTOBJECT(struct target_t, id.imo),
                                       .dflt.uinteger = 0},
	{"id.callsign",   t_string,  STRUCTOBJECT(struct target_t, id.callsign),
                                       .len = DAC1FID17_ID_LENGTH},
	{"id.other",      t_string,  STRUCTOBJECT(struct target_t, id.other),
                                       .len = DAC1FID17_ID_LENGTH},
	{"lat",           t_integer, STRUCTOBJECT(struct target_t, lat),
                                       .dflt.integer = AIS_LAT3_NOT_AVAILABLE},
	{"lon",           t_integer, STRUCTOBJECT(struct target_t, lon),
                                       .dflt.integer = AIS_LON3_NOT_AVAILABLE},
	{"course",        t_uinteger,STRUCTOBJECT(struct target_t, course),
                                       .dflt.uinteger = DAC1FID17_COURSE_NOT_AVAILABLE},
	{"second",        t_uinteger,STRUCTOBJECT(struct target_t, second),
                                       .dflt.uinteger = AIS_SECOND_NOT_AVAILABLE},
	{"speed",         t_uinteger,STRUCTOBJECT(struct target_t, speed),
                                       .dflt.uinteger = DAC1FID17_SPEED_NOT_AVAILABLE},
    };
/*@-type@*//* STRUCTARRAY confuses splint */
    const struct json_attr_t json_ais8_fid17[] = {
	AIS_HEADER
	AIS_TYPE8
	{"targets",       t_array,     STRUCTARRAY(ais->type8.dac1fid17.targets, json_ais8_fid17_targets_subtype, &ais->type8.dac1fid17.ntargets)},
	{NULL}
    };
/*@+type@*/

    const struct json_attr_t json_ais8_fid19[] = {
	AIS_HEADER
	AIS_TYPE8
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.linkage,
                                       .dflt.uinteger = 0},
	{"station",       t_string,    .addr.string = ais->type8.dac1fid19.station,
                                       .len = sizeof(ais->type8.dac1fid19.station)},
	{"lon",           t_integer,   .addr.integer = &ais->type8.dac1fid19.lon,
                                       .dflt.integer = AIS_LON3_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type8.dac1fid19.lat,
                                       .dflt.integer = AIS_LAT3_NOT_AVAILABLE},
	{"status",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.status,
                                       .dflt.uinteger = 0},
	{"signal",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.signal,
                                       .dflt.uinteger = 0},
	{"hour",          t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.hour,
                                       .dflt.uinteger = AIS_HOUR_NOT_AVAILABLE},
	{"minute",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.minute,
                                       .dflt.uinteger = AIS_MINUTE_NOT_AVAILABLE},
	{"nextsignal",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid19.nextsignal,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais8_fid27_waypoints_subtype[] = {
	{"lon",           t_integer, STRUCTOBJECT(struct waypoint_t, lon),
                                       .dflt.integer = AIS_LON4_NOT_AVAILABLE},
	{"lat",           t_integer, STRUCTOBJECT(struct waypoint_t, lat),
                                       .dflt.integer = AIS_LAT4_NOT_AVAILABLE},
    };
/*@-type@*//* STRUCTARRAY confuses splint */
    const struct json_attr_t json_ais8_fid27[] = {
	AIS_HEADER
	AIS_TYPE8
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid27.linkage,
                                       .dflt.uinteger = 0},
	{"sender",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid27.sender,
                                       .dflt.uinteger = 0},
	{"rtype",         t_uinteger,  .addr.uinteger = &ais->type8.dac1fid27.rtype,
                                       .dflt.uinteger = 0},
	{"start",         t_string,    .addr.string = start,
                                       .len = sizeof(start)},
	{"duration",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid27.duration,
                                       .dflt.uinteger = 0},
	{"waypoints",     t_array,     STRUCTARRAY(ais->type8.dac1fid27.waypoints, json_ais8_fid27_waypoints_subtype, &ais->type8.dac1fid27.waycount)},
	{NULL}
    };
/*@+type@*/

    const struct json_attr_t json_ais8_fid29[] = {
	AIS_HEADER
	AIS_TYPE8
	{"linkage",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid29.linkage,
                                       .dflt.uinteger = 0},
	{"text",          t_string,    .addr.string = ais->type8.dac1fid29.text,
                                       .len = sizeof(ais->type8.dac1fid29.text)},
	{NULL}
    };

    const struct json_attr_t json_ais8_fid31[] = {
	AIS_HEADER
	AIS_TYPE8
	{"lon",           t_integer,   .addr.integer = &ais->type8.dac1fid31.lon,
                                       .dflt.integer = DAC1FID31_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type8.dac1fid31.lat,
                                       .dflt.integer = DAC1FID31_LAT_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type8.dac1fid31.accuracy,
                                       .dflt.boolean = false},
	{"wspeed",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.wspeed,
                                       .dflt.uinteger = DAC1FID31_WIND_NOT_AVAILABLE},
	{"wgust ",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.wgust ,
                                       .dflt.uinteger = DAC1FID31_WIND_NOT_AVAILABLE},
	{"wdir",          t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.wdir,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"wgustdir",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.wgustdir,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"airtemp",       t_integer,   .addr.integer = &ais->type8.dac1fid31.airtemp,
                                       .dflt.integer = DAC1FID31_AIRTEMP_NOT_AVAILABLE},
	{"pressure",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.pressure,
                                       .dflt.uinteger = DAC1FID31_PRESSURE_NOT_AVAILABLE},
	{"pressuretend",  t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.pressuretend,
                                       .dflt.uinteger = DAC1FID31_PRESSURETREND_NOT_AVAILABLE},
	{"visibility",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.visibility,
                                       .dflt.uinteger = DAC1FID31_VISIBILITY_NOT_AVAILABLE},
	{"visgreater",    t_boolean,   .addr.boolean = &ais->type8.dac1fid31.visgreater,
                                       .dflt.boolean = false},
	{"waterlevel",    t_integer,   .addr.integer = &ais->type8.dac1fid31.waterlevel,
                                       .dflt.integer = DAC1FID31_WATERLEVEL_NOT_AVAILABLE},
	{"leveltrend",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.leveltrend,
                                       .dflt.uinteger = DAC1FID31_LEVELTREND_NOT_AVAILABLE},
	{"cspeed",        t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cspeed,
                                       .dflt.uinteger = DAC1FID31_CSPEED_NOT_AVAILABLE},
	{"cdir",          t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cdir,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"cspeed2",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cspeed2,
                                       .dflt.uinteger = DAC1FID31_CSPEED_NOT_AVAILABLE},
	{"cdir2",         t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cdir2,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"cdepth2",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cdepth2,
                                       .dflt.uinteger = DAC1FID31_CDEPTH_NOT_AVAILABLE},
	{"cspeed3",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cspeed3,
                                       .dflt.uinteger = DAC1FID31_CSPEED_NOT_AVAILABLE},
	{"cdir3",         t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cdir3,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"cdepth3",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.cdepth3,
                                       .dflt.uinteger = DAC1FID31_CDEPTH_NOT_AVAILABLE},
	{"waveheight",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.waveheight,
                                       .dflt.uinteger = DAC1FID31_HEIGHT_NOT_AVAILABLE},
	{"waveperiod",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.waveperiod,
                                       .dflt.uinteger = DAC1FID31_PERIOD_NOT_AVAILABLE},
	{"wavedir",       t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.wavedir,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"swellheight",   t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.swellheight,
                                       .dflt.uinteger = DAC1FID31_HEIGHT_NOT_AVAILABLE},
	{"swellperiod",   t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.swellperiod,
                                       .dflt.uinteger = DAC1FID31_PERIOD_NOT_AVAILABLE},
	{"swelldir",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.swelldir,
                                       .dflt.uinteger = DAC1FID31_DIR_NOT_AVAILABLE},
	{"seastate",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.seastate,
                                       .dflt.uinteger = DAC1FID31_SEASTATE_NOT_AVAILABLE},
	{"preciptype",    t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.preciptype,
                                       .dflt.uinteger = DAC1FID31_PRECIPTYPE_NOT_AVAILABLE},
	{"salinity",      t_uinteger,  .addr.uinteger = &ais->type8.dac1fid31.salinity,
                                       .dflt.uinteger = DAC1FID31_SALINITY_NOT_AVAILABLE},
	{"ice",           t_boolean,   .addr.boolean = &ais->type8.dac1fid31.ice,
                                       .dflt.boolean = false},
	{NULL}
    };

    const struct json_attr_t json_ais9[] = {
	AIS_HEADER
	{"alt",           t_uinteger,  .addr.uinteger = &ais->type9.alt,
                                       .dflt.uinteger = AIS_ALT_NOT_AVAILABLE},
	{"speed",         t_uinteger,  .addr.uinteger = &ais->type9.speed,
                                       .dflt.uinteger = AIS_SPEED_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type9.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type9.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type9.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"course",        t_uinteger,  .addr.uinteger = &ais->type9.course,
                                       .dflt.uinteger = AIS_COURSE_NOT_AVAILABLE},
	{"second",        t_uinteger,  .addr.uinteger = &ais->type9.second,
                                       .dflt.uinteger = AIS_SEC_NOT_AVAILABLE},
	{"regional",      t_uinteger,  .addr.uinteger = &ais->type9.regional,
                                       .dflt.uinteger = 0},
	{"dte",           t_uinteger,  .addr.uinteger = &ais->type9.dte,
                                       .dflt.uinteger = 1},
	{"raim",          t_boolean,   .addr.boolean = &ais->type9.raim,
                                       .dflt.boolean = false},
	{"radio",         t_uinteger,  .addr.uinteger = &ais->type9.radio,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais10[] = {
	AIS_HEADER
	{"dest_mmsi",     t_uinteger,  .addr.uinteger = &ais->type10.dest_mmsi,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais12[] = {
	AIS_HEADER
	{"seqno",         t_uinteger,  .addr.uinteger = &ais->type12.seqno,
                                       .dflt.uinteger = 0},
	{"dest_mmsi",     t_uinteger,  .addr.uinteger = &ais->type12.dest_mmsi,
                                       .dflt.uinteger = 0},
	{"retransmit",    t_boolean,   .addr.boolean = &ais->type12.retransmit,
                                       .dflt.boolean = 0},
	{"text",          t_string,    .addr.string = ais->type12.text,
                                       .len = sizeof(ais->type12.text)},
	{NULL}
    };

    const struct json_attr_t json_ais14[] = {
	AIS_HEADER
	{"text",          t_string,    .addr.string = ais->type14.text,
                                       .len = sizeof(ais->type14.text)},
	{NULL}
    };

    const struct json_attr_t json_ais15[] = {
	AIS_HEADER
	{"mmsi1",         t_uinteger,  .addr.uinteger = &ais->type15.mmsi1,
                                       .dflt.uinteger = 0},
	{"type1_1",       t_uinteger,  .addr.uinteger = &ais->type15.type1_1,
                                       .dflt.uinteger = 0},
	{"offset1_1",     t_uinteger,  .addr.uinteger = &ais->type15.offset1_1,
                                       .dflt.uinteger = 0},
	{"type1_2",       t_uinteger,  .addr.uinteger = &ais->type15.type1_2,
                                       .dflt.uinteger = 0},
	{"offset1_2",     t_uinteger,  .addr.uinteger = &ais->type15.offset1_2,
                                       .dflt.uinteger = 0},
	{"mmsi2",         t_uinteger,  .addr.uinteger = &ais->type15.mmsi2,
                                       .dflt.uinteger = 0},
	{"type2_1",       t_uinteger,  .addr.uinteger = &ais->type15.type2_1,
                                       .dflt.uinteger = 0},
	{"offset2_1",     t_uinteger,  .addr.uinteger = &ais->type15.offset2_1,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais16[] = {
	AIS_HEADER
	{"mmsi1",         t_uinteger,  .addr.uinteger = &ais->type16.mmsi1,
                                       .dflt.uinteger = 0},
	{"offset1",       t_uinteger,  .addr.uinteger = &ais->type16.offset1,
                                       .dflt.uinteger = 0},
	{"increment1",    t_uinteger,  .addr.uinteger = &ais->type16.increment1,
                                       .dflt.uinteger = 0},
	{"mmsi2",         t_uinteger,  .addr.uinteger = &ais->type16.mmsi2,
                                       .dflt.uinteger = 0},
	{"offset2",       t_uinteger,  .addr.uinteger = &ais->type16.offset2,
                                       .dflt.uinteger = 0},
	{"increment2",    t_uinteger,  .addr.uinteger = &ais->type16.increment2,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais17[] = {
	AIS_HEADER
	{"lon",           t_integer,   .addr.integer = &ais->type17.lon,
                                       .dflt.integer = AIS_GNS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type17.lat,
                                       .dflt.integer = AIS_GNS_LAT_NOT_AVAILABLE},
	{"data",          t_string,    .addr.string = data,
                                       .len = sizeof(data)},
	{NULL}
    };

    const struct json_attr_t json_ais18[] = {
	AIS_HEADER
	{"reserved",      t_uinteger,  .addr.uinteger = &ais->type18.reserved,
                                       .dflt.uinteger = 0},
	{"speed",         t_uinteger,  .addr.uinteger = &ais->type18.speed,
                                       .dflt.uinteger = AIS_SPEED_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type18.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type18.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type18.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"course",        t_uinteger,  .addr.uinteger = &ais->type18.course,
                                       .dflt.uinteger = AIS_COURSE_NOT_AVAILABLE},
	{"heading",       t_uinteger,  .addr.uinteger = &ais->type18.heading,
                                       .dflt.uinteger = AIS_HEADING_NOT_AVAILABLE},
	{"second",        t_uinteger,  .addr.uinteger = &ais->type18.second,
                                       .dflt.uinteger = AIS_SEC_NOT_AVAILABLE},
	{"regional",      t_uinteger,  .addr.uinteger = &ais->type18.regional,
                                       .dflt.uinteger = 0},
	{"cs",            t_boolean,   .addr.boolean = &ais->type18.cs,
                                       .dflt.boolean = false},
	{"display",       t_boolean,   .addr.boolean = &ais->type18.display,
                                       .dflt.boolean = false},
	{"dsc",           t_boolean,   .addr.boolean = &ais->type18.dsc,
                                       .dflt.boolean = false},
	{"band",          t_boolean,   .addr.boolean = &ais->type18.band,
                                       .dflt.boolean = false},
	{"msg22",         t_boolean,   .addr.boolean = &ais->type18.msg22,
                                       .dflt.boolean = false},
	{"raim",          t_boolean,   .addr.boolean = &ais->type18.raim,
                                       .dflt.boolean = false},
	{"radio",         t_uinteger,  .addr.uinteger = &ais->type18.radio,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais19[] = {
	AIS_HEADER
	{"reserved",      t_uinteger,  .addr.uinteger = &ais->type19.reserved,
                                       .dflt.uinteger = 0},
	{"speed",         t_uinteger,  .addr.uinteger = &ais->type19.speed,
                                       .dflt.uinteger = AIS_SPEED_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type19.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type19.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type19.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"course",        t_uinteger,  .addr.uinteger = &ais->type19.course,
                                       .dflt.uinteger = AIS_COURSE_NOT_AVAILABLE},
	{"heading",       t_uinteger,  .addr.uinteger = &ais->type19.heading,
                                       .dflt.uinteger = AIS_HEADING_NOT_AVAILABLE},
	{"second",        t_uinteger,  .addr.uinteger = &ais->type19.second,
                                       .dflt.uinteger = AIS_SEC_NOT_AVAILABLE},
	{"regional",      t_uinteger,  .addr.uinteger = &ais->type19.regional,
                                       .dflt.uinteger = 0},
	{"shipname",      t_string,    .addr.string = ais->type19.shipname,
                                       .len = sizeof(ais->type19.shipname)},
	{"shiptype",      t_uinteger,  .addr.uinteger = &ais->type19.shiptype,
                                       .dflt.uinteger = 0},
	{"to_bow",        t_uinteger,  .addr.uinteger = &ais->type19.to_bow,
                                       .dflt.uinteger = 0},
	{"to_stern",      t_uinteger,  .addr.uinteger = &ais->type19.to_stern,
                                       .dflt.uinteger = 0},
	{"to_port",       t_uinteger,  .addr.uinteger = &ais->type19.to_port,
                                       .dflt.uinteger = 0},
	{"to_starboard",  t_uinteger,  .addr.uinteger = &ais->type19.to_starboard,
                                       .dflt.uinteger = 0},
	{"epfd",          t_uinteger,  .addr.uinteger = &ais->type19.epfd,
                                       .dflt.uinteger = 0},
	{"raim",          t_boolean,   .addr.boolean = &ais->type19.raim,
                                       .dflt.boolean = false},
	{"dte",           t_uinteger,  .addr.uinteger = &ais->type19.dte,
                                       .dflt.uinteger = 1},
	{"assigned",      t_boolean,   .addr.boolean = &ais->type19.assigned,
                                       .dflt.boolean = false},
	{NULL}
    };

    const struct json_attr_t json_ais20[] = {
	AIS_HEADER
	{"offset1",       t_uinteger,  .addr.uinteger = &ais->type20.offset1,
                                       .dflt.uinteger = 0},
	{"number1",       t_uinteger,  .addr.uinteger = &ais->type20.number1,
                                       .dflt.uinteger = 0},
	{"timeout1",      t_uinteger,  .addr.uinteger = &ais->type20.timeout1,
                                       .dflt.uinteger = 0},
	{"increment1",    t_uinteger,  .addr.uinteger = &ais->type20.increment1,
                                       .dflt.uinteger = 0},
	{"offset2",       t_uinteger,  .addr.uinteger = &ais->type20.offset2,
                                       .dflt.uinteger = 0},
	{"number2",       t_uinteger,  .addr.uinteger = &ais->type20.number2,
                                       .dflt.uinteger = 0},
	{"timeout2",      t_uinteger,  .addr.uinteger = &ais->type20.timeout2,
                                       .dflt.uinteger = 0},
	{"increment2",    t_uinteger,  .addr.uinteger = &ais->type20.increment2,
                                       .dflt.uinteger = 0},
	{"offset3",       t_uinteger,  .addr.uinteger = &ais->type20.offset3,
                                       .dflt.uinteger = 0},
	{"number3",       t_uinteger,  .addr.uinteger = &ais->type20.number3,
                                       .dflt.uinteger = 0},
	{"timeout3",      t_uinteger,  .addr.uinteger = &ais->type20.timeout3,
                                       .dflt.uinteger = 0},
	{"increment3",    t_uinteger,  .addr.uinteger = &ais->type20.increment3,
                                       .dflt.uinteger = 0},
	{"offset4",       t_uinteger,  .addr.uinteger = &ais->type20.offset4,
                                       .dflt.uinteger = 0},
	{"number4",       t_uinteger,  .addr.uinteger = &ais->type20.number4,
                                       .dflt.uinteger = 0},
	{"timeout4",      t_uinteger,  .addr.uinteger = &ais->type20.timeout4,
                                       .dflt.uinteger = 0},
	{"increment4",    t_uinteger,  .addr.uinteger = &ais->type20.increment4,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais21[] = {
	AIS_HEADER
	{"aid_type",      t_uinteger,  .addr.uinteger = &ais->type21.aid_type,
                                       .dflt.uinteger = 0},
	{"name",          t_string,    .addr.string = ais->type21.name,
                                       .len = sizeof(ais->type21.name)},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type21.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type21.lon,
                                       .dflt.integer = AIS_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type21.lat,
                                       .dflt.integer = AIS_LAT_NOT_AVAILABLE},
	{"to_bow",        t_uinteger,  .addr.uinteger = &ais->type21.to_bow,
                                       .dflt.uinteger = 0},
	{"to_stern",      t_uinteger,  .addr.uinteger = &ais->type21.to_stern,
                                       .dflt.uinteger = 0},
	{"to_port",       t_uinteger,  .addr.uinteger = &ais->type21.to_port,
                                       .dflt.uinteger = 0},
	{"to_starboard",  t_uinteger,  .addr.uinteger = &ais->type21.to_starboard,
                                       .dflt.uinteger = 0},
	{"epfd",          t_uinteger,  .addr.uinteger = &ais->type21.epfd,
                                       .dflt.uinteger = 0},
	{"second",        t_uinteger,  .addr.uinteger = &ais->type21.second,
                                       .dflt.uinteger = 0},
	{"regional",      t_uinteger,  .addr.uinteger = &ais->type21.regional,
                                       .dflt.uinteger = 0},
	{"off_position",  t_boolean,   .addr.boolean = &ais->type21.off_position,
                                       .dflt.boolean = false},
	{"raim",          t_boolean,   .addr.boolean = &ais->type21.raim,
                                       .dflt.boolean = false},
	{"virtual_aid",   t_boolean,   .addr.boolean = &ais->type21.virtual_aid,
                                       .dflt.boolean = false},
	{NULL}
    };

    const struct json_attr_t json_ais22[] = {
	AIS_HEADER
	{"channel_a",     t_uinteger,  .addr.uinteger = &ais->type22.channel_a,
                                       .dflt.uinteger = 0},
	{"channel_b",     t_uinteger,  .addr.uinteger = &ais->type22.channel_b,
                                       .dflt.uinteger = 0},
	{"txrx",          t_uinteger,  .addr.uinteger = &ais->type22.txrx,
                                       .dflt.uinteger = 0},
	{"power",         t_boolean,   .addr.boolean = &ais->type22.power,
                                       .dflt.boolean = false},
	{"ne_lon",        t_integer,   .addr.integer = &ais->type22.area.ne_lon,
                                       .dflt.integer = AIS_GNS_LON_NOT_AVAILABLE},
	{"ne_lat",        t_integer,   .addr.integer = &ais->type22.area.ne_lat,
                                       .dflt.integer = AIS_GNS_LAT_NOT_AVAILABLE},
	{"sw_lon",        t_integer,   .addr.integer = &ais->type22.area.sw_lon,
                                       .dflt.integer = AIS_GNS_LON_NOT_AVAILABLE},
	{"sw_lat",        t_integer,   .addr.integer = &ais->type22.area.sw_lat,
                                       .dflt.integer = AIS_GNS_LAT_NOT_AVAILABLE},
	{"dest1",         t_uinteger,  .addr.uinteger = &ais->type22.mmsi.dest1,
                                       .dflt.uinteger = 0},
	{"dest2",         t_uinteger,  .addr.uinteger = &ais->type22.mmsi.dest2,
                                       .dflt.uinteger = 0},
	{"addressed",     t_boolean,   .addr.boolean = &ais->type22.addressed,
                                       .dflt.boolean = false},
	{"band_a",        t_boolean,   .addr.boolean = &ais->type22.band_a,
                                       .dflt.boolean = false},
	{"band_b",        t_boolean,   .addr.boolean = &ais->type22.band_b,
                                       .dflt.boolean = false},
	{"zonesize",      t_uinteger,  .addr.uinteger = &ais->type22.zonesize,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais23[] = {
	AIS_HEADER
	{"ne_lon",        t_integer,   .addr.integer = &ais->type23.ne_lon,
                                       .dflt.integer = AIS_GNS_LON_NOT_AVAILABLE},
	{"ne_lat",        t_integer,   .addr.integer = &ais->type23.ne_lat,
                                       .dflt.integer = AIS_GNS_LAT_NOT_AVAILABLE},
	{"sw_lon",        t_integer,   .addr.integer = &ais->type23.sw_lon,
                                       .dflt.integer = AIS_GNS_LON_NOT_AVAILABLE},
	{"sw_lat",        t_integer,   .addr.integer = &ais->type23.sw_lat,
                                       .dflt.integer = AIS_GNS_LAT_NOT_AVAILABLE},
	{"stationtype",   t_uinteger,  .addr.uinteger = &ais->type23.stationtype,
                                       .dflt.uinteger = 0},
	{"shiptype",      t_uinteger,  .addr.uinteger = &ais->type23.shiptype,
                                       .dflt.uinteger = 0},
	{"txrx",          t_uinteger,  .addr.uinteger = &ais->type23.txrx,
                                       .dflt.uinteger = 0},
	{"interval",      t_uinteger,  .addr.uinteger = &ais->type23.interval,
                                       .dflt.uinteger = 0},
	{"quiet",         t_uinteger,  .addr.uinteger = &ais->type23.quiet,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais24[] = {
	AIS_HEADER
	{"shipname",      t_string,    .addr.string = ais->type24.shipname,
                                       .len = sizeof(ais->type24.shipname)},
	{"shiptype",      t_uinteger,  .addr.uinteger = &ais->type24.shiptype,
                                       .dflt.uinteger = 0},
	{"vendorid",      t_string,    .addr.string = ais->type24.vendorid,
                                       .len = sizeof(ais->type24.vendorid)},
	{"callsign",      t_string,    .addr.string = ais->type24.callsign,
                                       .len = sizeof(ais->type24.callsign)},
	{"mothership_mmsi",t_uinteger,  .addr.uinteger = &ais->type24.mothership_mmsi,
                                       .dflt.uinteger = 0},
	{"to_bow",        t_uinteger,  .addr.uinteger = &ais->type24.dim.to_bow,
                                       .dflt.uinteger = 0},
	{"to_stern",      t_uinteger,  .addr.uinteger = &ais->type24.dim.to_stern,
                                       .dflt.uinteger = 0},
	{"to_port",       t_uinteger,  .addr.uinteger = &ais->type24.dim.to_port,
                                       .dflt.uinteger = 0},
	{"to_starboard",  t_uinteger,  .addr.uinteger = &ais->type24.dim.to_starboard,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais25[] = {
	AIS_HEADER
	{"addressed",     t_boolean,   .addr.boolean = &ais->type25.addressed,
                                       .dflt.boolean = false},
	{"structured",    t_boolean,   .addr.boolean = &ais->type25.structured,
                                       .dflt.boolean = false},
	{"dest_mmsi",     t_uinteger,  .addr.uinteger = &ais->type25.dest_mmsi,
                                       .dflt.uinteger = 0},
	{"app_id",        t_uinteger,  .addr.uinteger = &ais->type25.app_id,
                                       .dflt.uinteger = 0},
	{"data",          t_string,    .addr.string = data,
                                       .len = sizeof(data)},
	{NULL}
    };

    const struct json_attr_t json_ais26[] = {
	AIS_HEADER
	{"addressed",     t_boolean,   .addr.boolean = &ais->type26.addressed,
                                       .dflt.boolean = false},
	{"structured",    t_boolean,   .addr.boolean = &ais->type26.structured,
                                       .dflt.boolean = false},
	{"dest_mmsi",     t_uinteger,  .addr.uinteger = &ais->type26.dest_mmsi,
                                       .dflt.uinteger = 0},
	{"app_id",        t_uinteger,  .addr.uinteger = &ais->type26.app_id,
                                       .dflt.uinteger = 0},
	{"data",          t_string,    .addr.string = data,
                                       .len = sizeof(data)},
	{"radio",         t_uinteger,  .addr.uinteger = &ais->type26.radio,
                                       .dflt.uinteger = 0},
	{NULL}
    };

    const struct json_attr_t json_ais27[] = {
	AIS_HEADER
	{"status",        t_uinteger,  .addr.uinteger = &ais->type27.status,
                                       .dflt.uinteger = 0},
	{"speed",         t_uinteger,  .addr.uinteger = &ais->type27.speed,
                                       .dflt.uinteger = AIS_LONGRANGE_SPEED_NOT_AVAILABLE},
	{"accuracy",      t_boolean,   .addr.boolean = &ais->type27.accuracy,
                                       .dflt.boolean = false},
	{"lon",           t_integer,   .addr.integer = &ais->type27.lon,
                                       .dflt.integer = AIS_LONGRANGE_LON_NOT_AVAILABLE},
	{"lat",           t_integer,   .addr.integer = &ais->type27.lat,
                                       .dflt.integer = AIS_LONGRANGE_LAT_NOT_AVAILABLE},
	{"course",        t_uinteger,  .addr.uinteger = &ais->type27.course,
                                       .dflt.uinteger = AIS_LONGRANGE_COURSE_NOT_AVAILABLE},
	{"raim",          t_boolean,   .addr.boolean = &ais->type27.raim,
                                       .dflt.boolean = false},
	{"gnss",          t_boolean,   .addr.boolean = &ais->type27.gnss,
                                       .dflt.boolean = true},
	{NULL}
    };


/*@ +fullinitblock */

/* Generated code ends. */

